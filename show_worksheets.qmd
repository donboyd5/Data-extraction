---
format:
  html:
    toc: true
    toc-depth: 4
    page-layout: full
    css: wider.css
---    

# Show plan worksheets


```{r}
#| label: setup

source(here::here("setup.R"))
source(here::here("plan-name.R"))
source(here::here("functions-data.R"))

```


## Define plan to check

```{r}
#| label: get-sheetnames

sheets <- readxl::excel_sheets(xdpath)

```

## Setup

```{r}
#| label: copy-file
#| eval: false

# fs::file_copy(path = template_path, new_path = check_path, overwrite = TRUE)

```

## Get extracted inputs

```{r}
#| label: get-sheets

# define sheets to show
# exclude <- c("process", "conventions", "abbreviations", "sheets")
exclude <- c("0_process", "0_conventions", "0_abbreviations", "0_sheets")
sheets_show <- setdiff(sheets, exclude)
sheets_sort <- sheets_show |> sort()

```


```{r}
#| label: sheet-functions

show_sheets <- function(sheets_to_show, path) {
  for (s in sheets_to_show) {
    msg <- paste0("\n## ", s, "\n\n")
    cat(msg)
    # message("Sheet: ", s)
    writeLines(paste("Sheet:", s), con = stderr())
    res <- get_data(s, path)

    cat("\n### Info\n\n")
    if (interactive()) {
      print(knitr::kable(res$info)) # Simple table for interactive
    } else {
      print(
        knitr::kable(res$info) %>%
          kableExtra::kable_styling(
            bootstrap_options = "striped",
            full_width = FALSE
          )
      )
    }

    cat("\n### Data\n\n")
    if (interactive() & !is.null(res$data)) {
      print(knitr::kable(res$data)) # Simple table for interactive
    } else if (!is.null(res$data)) {
      print(
        knitr::kable(res$data) %>%
          kableExtra::kable_styling(
            bootstrap_options = "striped",
            full_width = FALSE
          ) |>
          kableExtra::scroll_box(width = "100%", height = "auto")
      )
    }
  }
}

```


## Show sheets
```{r}
#| label: show-sheets
#| results: asis
#| message: true

sheets_to_show <- sheets_sort
show_sheets(sheets_to_show, xdpath)

```


```{r echo=FALSE}
knitr::knit_exit()
```

